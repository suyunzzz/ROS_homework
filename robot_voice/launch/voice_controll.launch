<launch>
	<arg name="model" default="$(find xacro)/xacro --inorder '$(find wheel_chair_description)/urdf/wheel_chair.xacro'" />
	<arg name="gui" default="true" />

	<param name="robot_description" command="$(arg model)" />

    <!-- 设置GUI参数，显示关节控制插件 -->
	<param name="use_gui" value="$(arg gui)"/>

	<node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen">
        <rosparam file="$(find wheel_chair_description)/config/fake_wheel_chair_arbotix.yaml" command="load" />
        <param name="sim" value="true"/>
    </node>

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

	<!-- 运行robot_state_publisher节点，发布tf  -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- 运行rviz可视化界面 -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find wheel_chair_description)/config/wheel_chair_arbotix.rviz" required="true" />

    <!--运行自己写的语音控制节点voice_controll-->
	<node name="voice_controll" pkg="robot_voice" type="voice_controll" output="screen"/>

    <!--运行一个语音识别节点iat_publish，基于科大讯飞语音识别的文件-->
	<node name="iat_publish" pkg="robot_voice" type="iat_publish" output="screen"/>

</launch>


